scalar Date

type Query {
	tutteDomande: [Domanda]
	tutteRisposte: [Risposta]
	tuttiTest: [Test]
	tuttiInTest: [InTest]
	lastDomanda: [Domanda]
}

type Mutation {
	addRisposta(risposta: RispostaInput): Risposta
	addTest(test: TestInput): Test
	addDomanda(domanda: DomandaInput) : Domanda
	addInTest(inTest: InTestInput): InTest
}


input RispostaInput{
	id: ID!
	testo: String!
	punteggio: Float
	idDomanda: String!
}

input InTestInput{
	id: ID!
 	idDomanda: String!
	dataTest: String!
	nomeTest: String!
}

input DomandaInput{
	nome: String!
	testo: String!
	punti: Int
	ordinecasuale: Boolean
	risposteconnumero: Boolean
}

input TestInput{
	data: String!
	nome: String!
	ordinecasuale: Boolean
	domandeconnumero: Boolean
}



type Risposta {
	id: ID!
	testo: String!
	punteggio: Float
	domanda: Domanda
}


type Domanda {
	nome: String!
	testo: String!
	punti: Int
	ordinecasuale: Boolean
	risposteconnumero: Boolean
}


type Test {
	data: String!
	nome: String!
	ordinecasuale: Boolean
	domandeconnumero: Boolean
}


type InTest {
	domanda: Domanda!
	datatest: String!
	nometest: String!
}
